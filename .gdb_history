p Setting::lb_mode
n
n
n
n
i b
b main
kill
r 
p Settings::lb_mode
d 2
i b
c
p Settings::lb_mode
n
n
n
b Rdma::ReceiveAck
 d 3
b RdmaHw::ReceiveAck
kill
r
n
n
i b
d 1
 d 4
b RdmaHw::ReceiveUdp
kill
r
n
n
exit
b RdmaHw::ReceiveAck
b RdmaQueuePair::SearchLastI
r
n
n
n
n
exit
b main
r
n
n
n
n
kill
b SwitchSend
r
n
n
d 1
c
b RdmaHw::ReceiveAck
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
d 2
i b
c
exit
b RdmaQueuePair::GetRePkt
r
c
n
p proflr.prorelist
n
n
r
c
n
p a
p this->proflr
n
r
n
r
c
p proflr
exit
r
i b
n
r
b RdmaQueuePair::TimeRatio
r
c
n
n
p i
p psn
n
n
p l_psn
p r_psn
n
p r1
n
p r2
p (psn-l_psn)/(r_psn-l_psn)
p psn-l_psn
p r_psn-l_ps
p r_psn-l_psn
p ProRouting::sample_t
p ProRouting::maxdelay
exit
r
i b
n
r
b RdmaQueuePair::TimeRatio
r
c
n
n
n
n
n
n
p psn
p r1
p (psn - l_psn + r2) / (r_psn - l_psn + r1)
p (double)(psn - l_psn + r2) / (r_psn - l_psn + r1)
exit
r
n
r
r
p i
p psn
exit
b RdmaQueuePair::SearchLastI
r
c
c
c
p proflr.psnlist
c
c
p proflr.psnlist
c
c
p proflr.psnlist
c
c
p proflr.psnlist
c
c
p proflr.psnlist
c
c
p proflr.psnlist
c
c
p proflr.psnlist
c
c
p proflr.psnlist
c
c
p proflr.psnlist
c
c
p proflr.psnlist
m_ipid
p m_ipid
c
c
p m_ipid
p proflr.psnlist
c
c
p proflr.psnlist
GetTypeId
GetTypeId()
c
c
p proflr.psnlist
c
c
p proflr.psnlist
c
c
p proflr.psnlist
c
c
p proflr.psnlist
c
c
p proflr.psnlist
c
c
p proflr.psnlist
c
c
this->GetTypeId()
call this->GetTypeId()
c
c
call this->GetTypeId()
p proflr.psnlist
p this
p *this
help dashboard
help dashboard
help dashboard
dashboard -layout source variables
exit
dashboard -layout source variables
r
n
r
dashboard -layout source variables expressions
n
b RdmaQueuePair::SearchLastI
r
c
dashboard -layout source variables expressions stack

dashboard source -style height 10
dashboard source -style height 10
dashboard source -style height 0
exit
b rdma-hw.cc:592
r
i b
d 1
b rdma-hw.cc:592
n
n
n
n
n
n
p ch.ack.seq
p proflr.is_recovery
p qp->proflr.is_recovery
p qp
p (*qp).proflr.is_recovery
p *qp
exit
